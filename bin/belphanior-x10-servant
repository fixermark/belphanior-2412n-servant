#!/usr/bin/ruby1.8
require 'rubygems'
require 'belphanior/servant/servant'
require 'belphanior/servant/homenetwork/insteon_2412n_marshaller'
require 'belphanior/servant/homenetwork/insteon_2412n_x10_codec'
require 'sinatra'

# Must be called to install and configure default routing for
# '/', '/config', and '/protocol'
servant_init

if servant_config.get("insteon_host") == nil
    servant_config.set("insteon_host","localhost")
end

marshaller = Belphanior::Servant::HomeNetwork::Insteon_2412n_Marshaller.new(  
  servant_config.get("insteon_host"))

set(:marshaller, marshaller)
set(:x10, Belphanior::Servant::HomeNetwork::Insteon_2412n_x10_Codec.new(
  marshaller))

device_id_arg = {
  "name" => "device",
  "description" => "The house and unit code of the device."
}

add_role_description(
  {
    "name" => "x10 controller",
    "description" => "A controller for X10 devices, which can address the devices by house code and unit code.",
    "commands" => [
                   {
                     "name" => "unit on",
                     "description" => "Turn on the designated unit.",
                     "arguments" => [device_id_arg],
                     "return" => "None."
                   },
                   {
                     "name" => "unit_off",
                     "description" => "Turn off the designated unit.",
                     "arguments" => [device_id_arg],
                     "return" => "None."
                   }
                  ]
  })

add_handler("unit on", "device", "POST", "/device/$(device)/on", "") { |device|
  settings.x10.device_on(device)
  ""
}

add_handler("unit off", "device", "POST", "/device/$(device)/off", "") { |device|
  settings.x10.device_off(device)
  ""
}
